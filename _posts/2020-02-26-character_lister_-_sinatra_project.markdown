---
layout: post
title:      "Character Lister - Sinatra Project"
date:       2020-02-26 21:52:38 +0000
permalink:  character_lister_-_sinatra_project
---


While this was my second project of the bootcamp I was expecting things to go smoothly, since I had already experienced what it was like working on a project when I did the CLI Gem project. One would think that with more experience things would get easier, but that is not the case especially since I am the type of person who wants to add lots of extra features that aren't in the project requirements. This time around my idea was to create a Sinatra web application that would allow people to create a list of their favorite characters and rank them. It seems really straightforward and I thought it was more simple than some of the labs leading up to the project even.

In the beginning there were a lot of new files being simply created and left blank or with a couple lines of comments just so that I could build the right structure and make sure I wasn't leaving anything out. I think overall that approach is great so that workflow later on is efficient and there isn't much confusion when looking for a certain file or moving them into an easy to find place later and having to look through all files that may have referenced that old location. Even though just creating all these blank files and directories from scratch seemed like a daunting task in itself it only took maybe 30 minutes and I had a structured project to work with, so then I moved onto adding some tests.

Now this is when things started to slow down, since starting the bootcamp I remember being introduced to how to read the rspec files so I could understand what type of behavior is expected of the code, but I realized that I had not actually written any tests myself. So not knowing how to start with tests I looked to Google and previous labs that were in my GitHub repositories and I struggled for quite a bit and was getting strange errors that halted my progress. Fixing those errors took me a lot longer than I was hoping but I'm glad I went through that trouble because I have some experience with writing tests now.

At the time of starting this project I thought "Oh, I'll be done in two days or maybe I will finish it on the third for sure," since I believed the project to be straightforward. By the time I got all my tests setup and passing it was already the second day, and I had only written 6 tests to make sure my objects worked as intended. Building out the routes also turned into quite the struggle as I wanted to make sure each route name sort of made sense and also was simple. I know I was taught about the restful routes format but it didn't quite make sense to follow that for the UsersController class since that controller dealt mostly with signup and logging in. There was also the issue of how I wanted the user to be able to find their list or another user's list. It does make sense to name the route something like '/:username/list' but I wasn't including a profile page or other functionality. This is just a simple app to rank your favorite characters so the only reason to route to a user is to look at the list. Arguing with myself over route names and which controller it belongs to was not an anticipated struggle but after I got most of the routes coded and the views to go with them I was already 5 days in.

The last few days while challenging, were the most fun I've had working on something in a long time. The last two days were spent entirely on incorporating the editing of the character info, specifically the changing of ranks. Changing ranks should be easy since a user is just editing a single number, right? Well... as most programmers know the user doesn't always give us good input and thus we should never trust them. Also I want to make the user's life easier. I want to update the rest of the characters' ranks for them. I don't want someone to have to manually edit the rank numbers on every single character everytime they want to add a new one to the top of their list. I spent the whole first day trying to build this functionality and was always 'so close' to getting it and of course I thought my logic was just slightly off everytime. Turns out I didn't realize the full extent of how ActiveRecord's auto generated functions worked, I thought that since it created a list_rank and list_rank= function for my characters that there was also an @list_rank instance variable, but that is not the case. Once I figured that was the problem things suddenly were clear and I was able to finish up the project with a smile on my face.

Overall the project, while appearing easy, was a bit more complicated and dealt with things that I was actually unfamiliar with. I'm glad I was able to build something that I believe to actually be useful or neat and not go overboard with extra features like a friends list  and profile pages. Working on this Sinatra project was extremely frustrating at times and also a fun challenge that led to a better understanding of ActiveRecord and creating routes. I'm looking forward to the next project, hoping things will be smoother but if they aren't I'm ready for the challenge!

